/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package reversible;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.util.Random;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
/**
 *
 * @author admin
 */
public class MessageFrame extends javax.swing.JFrame {

    /**
     * Creates new form MessageFrame
     */
    Details dt=new Details();
    MainFrame mf;
    
    public MessageFrame(MainFrame me) 
    {
        initComponents();
        mf=me;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 30)); // NOI18N
        jLabel1.setText("Message-Oriented Texture Synthesis");

        jLabel2.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jLabel2.setText("Enter Secret Message");

        jTextField1.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N

        jButton1.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton1.setText("Embed Message");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel2)
                        .addGap(60, 60, 60)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jButton1)))
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jButton1)
                .addContainerGap(227, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            String ms=jTextField1.getText();
            if(ms.equals(""))
                JOptionPane.showMessageDialog(this, "Enter Secret Message");
            else
            {
                StegoFrame sf=new StegoFrame();
                int ph1=sf.jPanel2.getHeight();
                int pw1=sf.jPanel2.getWidth();
                BufferedImage ste=new BufferedImage(pw1,ph1,BufferedImage.TYPE_INT_RGB);
                Graphics2D gp1=ste.createGraphics();
            
                int m11=0;
                int kk=0;
                int ig1=0;
                for(int i=0;i<dt.Tpw;i++)
                {
                    int m2=0;
                    for(int j=0;j<dt.Tph;j++)
                    {                                        
                        if(dt.PatchID.contains(kk))
                        {
                            //ImageIcon ic=new ImageIcon("img1.jpg");
                            //ImageIcon ic=new ImageIcon(mf.path);
                            ImageIcon ic=new ImageIcon("patch\\b"+dt.PatchID.indexOf(kk)+".jpg");
                            JLabel lb1=new JLabel();
                            lb1.setIcon(ic);
                            lb1.setBounds(m2, m11, 32,32);
                            sf.jPanel2.add(lb1);
                            
                            
                          //  BufferedImage bi=ImageIO.read(new File("patch//b"+ig1+".jpg"));
                          //  gp1.drawImage(bi, null, m11, m2); 
                            ig1++;
                        }
                        else
                        {
                            Random rn=new Random();
                            int ks=0;
                            while(ks==0)
                            {
                                int ak=rn.nextInt(dt.PatchID.size());
                                int am=dt.PatchID.get(ak);
                                ks=dt.PatchID.indexOf(am);
                            }
                            //ImageIcon ic=new ImageIcon("img1.jpg");
                            ImageIcon ic=new ImageIcon("patch\\b"+ks+".jpg");
                            JLabel lb1=new JLabel();
                            lb1.setIcon(ic);
                            lb1.setBounds(m2, m11, 32,32);
                            sf.jPanel2.add(lb1);
                           //  BufferedImage bi=ImageIO.read(new File("patch//b"+ks+".jpg"));
                            //gp1.drawImage(bi, null, m11, m2); 
                        }
                       // m2=m2+32+3;
                            m2=m2+32;
                       kk++; 
                    
                        //else
                        //  lb1.setText("-1");
                    
                       
                    }
                    //m11=m11+32+3;
                    m11=m11+32;
                }
                
                sf.jPanel2.paint(gp1);
                gp1.dispose();

                ImageIO.write(ste, "jpg", new File("syn.jpg"));
                
                BufferedImage bi=ImageIO.read(new File("syn.jpg"));
                WritableRaster raster   = bi.getRaster();
                DataBufferByte buffer = (DataBufferByte)raster.getDataBuffer();
                byte img[]=buffer.getData();
                
                byte msg[]=ms.getBytes();
                int mlen=msg.length;
                byte len[]=new byte[4];
                len[0]=(byte)((mlen & 0xFF000000) >>> 24);
                len[1]=(byte)((mlen & 0x00FF0000) >>> 16);
                len[2]=(byte)((mlen & 0x0000FF00) >>> 8 );
                len[3]=(byte)((mlen & 0x000000FF));
                
                encode_text(img, len,  0); 
                encode_text(img, msg, 32);
                
                ImageIO.write(bi,"png", new File("ste.png"));
            
                sf.setVisible(true);
                sf.setResizable(false);
                sf.setTitle("Stego Synthesis Texture");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

     public byte[] encode_text(byte[] image, byte[] addition, int offset)
    {
	   
	if(addition.length + offset > image.length)
	{
	    throw new IllegalArgumentException("File not long enough!");
	}
	
	for(int i=0; i<addition.length; ++i)
	{

            int add = addition[i];
            for(int bit=7; bit>=0; --bit, ++offset) 
            {
                int b = (add >>> bit) & 1;
                
	        image[offset] = (byte)((image[offset] & 0xFE) | b );
	    }
	}
	return image;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessageFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new MessageFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
